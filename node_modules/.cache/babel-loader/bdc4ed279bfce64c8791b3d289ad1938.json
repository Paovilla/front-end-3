{"ast":null,"code":"var _jsxFileName = \"/home/pao/Documents/Paola/Digital House/FrontEnd III/proyectos/primer-entregable-front-end/entregable-frontend-3-junio22/src/components/Item.js\";\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport { useState } from \"react\";\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(props) {\n  // const [stock, setStock] = useState\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"header\",\n      children: props.producto.producto.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.producto.producto.descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En stock \", props.producto.stock]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","Item","props","producto","nombre","descripcion","stock"],"sources":["/home/pao/Documents/Paola/Digital House/FrontEnd III/proyectos/primer-entregable-front-end/entregable-frontend-3-junio22/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nimport { useState } from \"react\";\r\nimport '../index.css';\r\n\r\nexport default function Item(props) {\r\n  // const [stock, setStock] = useState\r\n\r\n  return (\r\n    <div className='producto'>\r\n      {/* maquetar Item aquí */}\r\n      <h3 className=\"header\">{props.producto.producto.nombre}</h3>\r\n      <p>{props.producto.producto.descripcion}</p>\r\n      <h5>En stock {props.producto.stock}</h5>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAClC;EAEA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBAEE;MAAI,SAAS,EAAC,QAAd;MAAA,UAAwBA,KAAK,CAACC,QAAN,CAAeA,QAAf,CAAwBC;IAAhD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,UAAIF,KAAK,CAACC,QAAN,CAAeA,QAAf,CAAwBE;IAA5B;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,wBAAcH,KAAK,CAACC,QAAN,CAAeG,KAA7B;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;KAXuBL,I"},"metadata":{},"sourceType":"module"}